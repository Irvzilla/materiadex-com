{
  "_args": [
    [
      "@react-hook/media-query@1.0.1",
      "/Users/ivansala/Documents/GitHub/materiadex-com2"
    ]
  ],
  "_from": "@react-hook/media-query@1.0.1",
  "_id": "@react-hook/media-query@1.0.1",
  "_inBundle": false,
  "_integrity": "sha512-8QeqldZ/6PDkboR00hgglGt2ebUnCBd4zQ0aNMcnP1pcskP8BHb7GgJWOmG4FjnGwPZPp/Hb+7YkDlonPDYAMw==",
  "_location": "/@react-hook/media-query",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "@react-hook/media-query@1.0.1",
    "name": "@react-hook/media-query",
    "escapedName": "@react-hook%2fmedia-query",
    "scope": "@react-hook",
    "rawSpec": "1.0.1",
    "saveSpec": null,
    "fetchSpec": "1.0.1"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/@react-hook/media-query/-/media-query-1.0.1.tgz",
  "_spec": "1.0.1",
  "_where": "/Users/ivansala/Documents/GitHub/materiadex-com2",
  "bugs": {
    "url": "https://github.com/jaredLunde/react-hook/issues"
  },
  "dependencies": {},
  "description": "React hooks that update when media queries change between matched and unmatched states.",
  "devDependencies": {
    "@babel/preset-react": "latest",
    "@lunde/babel-preset-es": "latest",
    "@testing-library/jest-dom": "latest",
    "@testing-library/react": "latest",
    "@testing-library/react-hooks": "latest",
    "@types/jest": "latest",
    "@types/react": "latest",
    "@types/react-dom": "latest",
    "@typescript-eslint/eslint-plugin": "latest",
    "@typescript-eslint/parser": "latest",
    "babel-plugin-optimize-react": "latest",
    "babel-plugin-typescript-to-proptypes": "latest",
    "cross-env": "latest",
    "eslint": "latest",
    "eslint-import-resolver-jest": "latest",
    "eslint-plugin-jest": "latest",
    "eslint-plugin-react": "latest",
    "eslint-plugin-react-hooks": "latest",
    "husky": "latest",
    "jest": "latest",
    "lint-staged": "latest",
    "prettier": "latest",
    "react": "latest",
    "react-dom": "latest",
    "react-test-renderer": "latest",
    "rimraf": "^2.6.3",
    "ts-jest": "latest",
    "typescript": "latest"
  },
  "files": [
    "/dist"
  ],
  "homepage": "https://github.com/jaredLunde/react-hook/tree/master/packages/media-query#readme",
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged && npm run build:types"
    }
  },
  "keywords": [
    "react",
    "react hook",
    "media query",
    "matchmedia",
    "media query hook",
    "react media query hook",
    "media queries hook",
    "media queries",
    "javascript media query",
    "media query js",
    "breakpoint hook",
    "breakpoints hook",
    "react breakpoint",
    "react breakpoints"
  ],
  "license": "MIT",
  "lint-staged": {
    "**/*.{ts,tsx,js,jsx}": [
      "eslint",
      "prettier --write"
    ],
    "**/*.{md,yml,json,babelrc,eslintrc,prettierrc}": [
      "prettier --write"
    ]
  },
  "main": "dist/cjs/index.js",
  "module": "dist/es/index.js",
  "name": "@react-hook/media-query",
  "peerDependencies": {
    "react": ">=16.8",
    "react-dom": ">=16.8"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jaredLunde/react-hook.git"
  },
  "scripts": {
    "build": "npm run build:cjs && npm run build:es && npm run build:types",
    "build:cjs": "babel src -d dist/cjs -x .ts,.tsx --ignore \"**/*.test.ts\",\"**/test.ts\",\"**/*.test.tsx\",\"**/test.tsx\" --delete-dir-on-start",
    "build:es": "cross-env BABEL_ENV=es babel src -d dist/es -x .ts,.tsx --ignore \"**/*.test.ts\",\"**/test.ts\",\"**/*.test.tsx\",\"**/test.tsx\" --delete-dir-on-start",
    "build:types": "tsc -p tsconfig.json -d --outDir dist/es --emitDeclarationOnly && mkdir -p dist/cjs && cp -R dist/es/**.d.ts dist/cjs && rimraf dist/**/*.test.d.ts",
    "check-types": "tsc --noEmit -p tsconfig.json",
    "format": "prettier --write \"**/*.{ts,tsx,js,jsx,md,yml,json,babelrc,eslintrc,prettierrc}\"",
    "lint": "eslint . --ext .ts,.tsx",
    "prepublishOnly": "npm run lint && npm run test && npm run build && npm run format",
    "test": "jest",
    "validate": "npm run check-types && npm run lint && npm run test -- --coverage"
  },
  "sideEffects": false,
  "types": "dist/cjs/index.d.ts",
  "version": "1.0.1"
}
